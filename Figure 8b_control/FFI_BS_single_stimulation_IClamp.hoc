objref PC, PCvode
PC= new ParallelContext()
PC.nthread(256)
dt=.1
//PC.runworker()

RNGseed=123
number_of_axon=2500 //2500 axons, producing a connection probability of 2% (Scharfman, 2009)
input_sample_size = 50 //how many axons each GC sample from
number_of_input=25 //each axon produce 75 inputs that are distributed in time
Activeaxon_number=500//total number of active axons

xopen("GC_BC_template_240425.hoc")
xopen("Input_gen_single_240110.hoc")




scale_factor = 0.1 //the scale factor for EPSGs in both BCs and GCs

print "GC_connection_Poisson_excitation_240324_mpi.hoc"
xopen("GC_connection_Poisson_excitation_240324_mpi.hoc")

print "load BC_excitatory_connection_240408_mpi.hoc"
xopen("BC_excitatory_connection_240408_mpi.hoc")

print "load BC-GC_inhibitory_synapse_240425.hoc"
xopen("BC-GC_inhibitory_synapse_240425.hoc")
changeBC_synapse_weight(GC_IPSG_weight*10)

print "load_RegisterAPs.hoc"
xopen("RegisterAPs.hoc")

print "load simulate.hoc"
xopen("simulate.hoc")

print "load Record_GC_BC_Vm.hoc"
xopen ("Record_GC_BC_Vm.hoc")


for a100=0, BC_number-1{access BC[a100].soma
					    IN_RMP=rng4.normal(-62, 3.195*3.195)
						if ((IN_RMP<-80)||(IN_RMP>-40)) {IN_RMP=rng4.normal(-62, 3.195*3.195)}
						e_pas=IN_RMP  
						g_pas= 1/20000  //based on the time constant of Iulia's measurement 240124
						//diam= 5.6419*1.4 //Adjust so that the input resistance of the interneuron is appriximal one third of that of the excitatory cell
						//L=5.6419*1.4
						}

make_output_raster_for_origin()

//run the simulation with FFI
RegisterAP()
simulate()

objref IO
IO=new File()

IO.wopen("FFI_IN_AP_time.txt")
for a=0, BC_number-1 {for b=0, BCAP_time[a].size-1 {IO.printf("%g%s%f\n", a, " ", BCAP_time[a].x[b])}}
IO.close()

IO.wopen("FFI_PN_AP_time.txt")
for a=0, GC_number-1 {for b=0, GCAP_time[a].size-1 {IO.printf("%g%s%f\n", a, " ", GCAP_time[a].x[b])}}
IO.close()

writeGCVm()
writeBCVm()


access BC[50].soma
print L
print diam
print 1/g_pas

PC.done()